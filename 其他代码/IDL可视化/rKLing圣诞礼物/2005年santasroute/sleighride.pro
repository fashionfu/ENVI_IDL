;+
;  《IDL程序设计》
;   -数据可视化与ENVI二次开发
;        
; 示例代码
;
; 作者: 董彦卿
;
; 联系方式：sdlcdyq@sina.com
;-
;{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|{{:|

pro sleighRide, lonPoints, latPoints, group_leader=group_leader
  ;maps out the sleigh ride path generated by the genetic algorithm

  if n_params() eq 0 then begin
    lonPoints = findgen(360)
    latPoints = shift(sin(lonPoints*!dtor)*90.0,90)
  endif
  
  ChristmasEve = julday(12,24,2005,0,0,0)
  numTimeSteps = n_elements(lonPoints)
  timeStep =  1440.0/numTimeSteps
  ;widget stuff first
  base = widget_base(row=1,title='Sleigh Ride',group_leader=group_leader);, $
  ;tlb_frame_attr=2)
  drawID = widget_draw(base, xsize=700, ysize=350, graphics_level=2, $
    retain=2, renderer=0)
  widget_control, base, /realize
  widget_control, drawID,get_value=oWin ;object window ID
  ;object Hierarchy now
  oView = obj_new('IDLgrView',viewplane_rect=[0,-90,360,180])
  ;settting the object windows graphics_tree to the view object means that
  ;when the window is destroyed "almost" everything added to the view object
  ;will be destroyed also.  For the exception, see below
  oWin->setProperty, graphics_tree=oView
  
  ;create a blurred light for Rudolph's node
  xsize = 15 & ysize = 15
  image = bytarr(4,xsize,ysize)
  ;define input function parameters:
  A = [ 1., 1., 5., 5., xsize/2., ysize/2.]
  ;create X and Y arrays:
  X = findgen(xsize) # replicate(1.0, ysize)
  Y = replicate(1.0, xsize) # findgen(ysize)
  ;create a circle:
  U = ((X-A[4])/A[2])^2 + ((Y-A[5])/A[3])^2
  ;create gaussian Z for a blurred light
  Z = bytscl(A[0] + A[1] * exp(-U/2))
  ;only want red
  image[0,*,*] = Z
  ;control the transparency with the same profile as the image
  image[3,*,*] = bytscl(Z,min=50,top=255)
  ;create an image object for the sleigh's position
  oNose = obj_new('IDLgrImage',image,interleave=0,blend_function=[3,4], $
    location=[lonPoints[0],latPoints[0]])
  ;create a Model to hold these objects
  oSleighModel = obj_new('IDLgrModel')
  read_jpeg,sourceroot() + 'earthatday.jpg',dayImage
  read_jpeg,sourceroot() +'earthatnight.jpg',nImage
  
  ;the trick for having the day/night earth is to have the day image underneath with
  ;no transparency.  Then all we have to do is put the night image on top where the
  ;transparency is detemined by the location of the sun.e.g. Full daylight is 100%
  ;transparent, full night is completely opaque.  The three zones of twilight are in
  ;between
  nightImage = createNightImage(nImage, time=ChristmasEve, imageXsize=576, imageYsize=288)
  
  oEarthAtDay = obj_new('IDLgrImage',dayImage,dimen=[360,180],location=[0,-90])
  oSleighModel->add,oEarthAtDay
  oEarthAtNight = obj_new('IDLgrImage',nightImage,dimen=[360,180],location=[0,-90], $
    blend_function=[3,4])
  oSleighModel->add,oEarthAtNight
  
  oWin->draw, oView
  
  ;uncomment these lines if you want to show the route
  ;oLines = obj_new('IDLgrPolyline',lonPoints,latPoints,color=[255,255,255])
  ;oSleighModel->add,oLines
  
  ;add the oNose after the day and night image so that is on top
  oSleighModel->add,oNose
  oView->add,oSleighModel
  oWin->draw, oView,/draw
  
  for i=0.0,numTimeSteps-1.0,1.0 do begin
    nightImage = createNightImage(nImage, time=ChristmasEve + (i*timeStep/1440.0), $
      imageXsize=576, imageYsize=288)
    oEarthAtNight->setProperty, data=nightImage
    ;subtract 7.5 (half the size of the nose image) so that the image
    ;is centered on the points
    oNose->setProperty,location=[lonPoints[i]-7.5,latPoints[i]-7.5]
    oWin->draw, oView
    wait,0.001 ;have to wait for a small bit so that graphics don't lock up
  endfor
  
  displayText = ['Merry Christmas!','Kling Research and Software']
  oFont = obj_new('IDLgrFont','Times*Bold*italic',size=0.5)
  oText = obj_new('IDLgrText',string=displayText,location=[[180,15,0],[180,0,0]], $
    color=[255,0,0],font = oFont, align=0.5,/onglass)
  oSleighModel->add,oText
  
  for i=0.5,30.0 do begin
    oFont->setProperty,size=i
    oWin->draw, oView
  endfor
  
  ;the font object is not cleaned up by the graphics_tree so do it here.
  ;This is a little of a kludge but OK since this program only runs once
  obj_destroy, oFont
  
  return & end
  
  
